/*
 * grunt-fontello2js
 * https://github.com/killroyboy/grunt-fontello2js
 *
 * Copyright (c) 2015 Dan Wilson
 * Licensed under the MIT license.
 */

'use strict';

module.exports = function (grunt) {

  grunt.registerMultiTask('fontello2js', 'Generate a Javascript Module file for referencing font icons based on a fontello config file', function () {

    // Iterate over all specified file groups.
    this.files.forEach(function (file) {
      // Concat specified files.
      var lines = [], prefix = '', suffix = '', filePaths = [];
      var src = file.src.filter(function (filepath) {
        // Warn on and remove invalid source files (if nonull was set).
        if (!grunt.file.exists(filepath)) {
          return false;
        } else {
          return true;
        }
      }).map(function (filepath) {
        // Store the filepath for later use
        filePaths.push(filepath);
        // Read file source.
        grunt.log.writeln('Loading source file: "' + filepath + '".');
        return grunt.file.readJSON(filepath);
      });

      lines.push('/**');
      lines.push(' * Generated by grunt-fontello2js [https://github.com/killroyboy/grunt-fontello2js]');
      lines.push(' * Thanks to fontello.com for a great product!');
      lines.push(' * Source: ' + filePaths.join(', '));
      lines.push(' * Created: ' + new Date().toString());
      lines.push(' */');
      lines.push('');
      lines.push('[');

      src.forEach(function (srcFile) {
        if (srcFile.css_use_suffix) {
          suffix = srcFile.css_prefix_text;
        } else {
          prefix = srcFile.css_prefix_text;
        }

        srcFile.glyphs.forEach(function (glyph) {
          if ((glyph.src === 'custom_icons' && glyph.selected) || glyph.src !== 'custom_icons') {
            lines.push("\t['" + prefix + glyph.css + suffix + "', " + glyph.code + "],");
          }
        });
      });

      lines.push('].forEach (function (icon) {');
      lines.push('\texports[ icon[0] ] = String.fromCharCode( icon[1] );');
      lines.push('});');

      // Write the destination file.
      grunt.file.write(file.dest, lines.join("\n"));

      // Print a success message.
      grunt.log.writeln('File "' + file.dest + '" created.');
    });
  });

};
